{"id":"bEr1","dependencies":[{"name":"C:\\DATA\\WEB_2020\\chrome_extension\\grid\\package.json","includedInParent":true,"mtime":1608795005317}],"generated":{"js":"chrome.runtime.onInstalled.addListener(function () {\n  chrome.storage.sync.set({\n    globalConfig: JSON.stringify({\n      containerWidth: '1202px',\n      containerPadding: '16px',\n      gridColColor: 'rgba(255, 0, 0, 0.2)',\n      gridRowColor: 'rgba(255, 0, 0, 0.2)',\n      gridGapColColor: 'transparent',\n      gridGapRowColor: 'transparent',\n      gridColGap: '32px',\n      gridRowGap: '16px',\n      gridCols: '12',\n      gridRowHeight: '1px'\n    })\n  });\n  chrome.declarativeContent.onPageChanged.removeRules(undefined, function () {\n    chrome.declarativeContent.onPageChanged.addRules([{\n      conditions: [new chrome.declarativeContent.PageStateMatcher({\n        pageUrl: {\n          schemes: ['https', 'http']\n        }\n      })],\n      actions: [new chrome.declarativeContent.ShowPageAction()]\n    }]);\n  }); // chrome.pageAction.onClicked.addListener(function () {\n  // \tchrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n  // \t\tchrome.tabs.executeScript(tabs[0].id, { file: 'main.js' });\n  // \t});\n  // });\n\n  chrome.tabs.onUpdated.addListener(function (tabId, changeInfo, tab) {\n    if (changeInfo.status == 'complete') {\n      chrome.tabs.executeScript(tabId, {\n        file: 'tabs/startup.js'\n      });\n    }\n  });\n  chrome.commands.onCommand.addListener(function (command) {\n    console.log('Command:', command);\n\n    if (command === 'toggle-feature-foo') {\n      chrome.tabs.query({\n        active: true,\n        currentWindow: true\n      }, function (tabs) {\n        chrome.tabs.executeScript(tabs[0].id, {\n          file: 'tabs/toggle.js'\n        });\n      });\n    }\n  }); // chrome.extension.onRequest.addListener(function (\n  // \trequest,\n  // \tsender,\n  // \tsendResponse\n  // ) {\n  // \tloadSettings(); //обновление настроек\n  // \tif (request.operation == 'hotkeys') {\n  // \t\t//запрос текущих настроек горячих клавиш\n  // \t\tsendResponse({ hotkeys: localStorage.hotkeys });\n  // \t} else if (request.operation == 'hotkey') {\n  // \t\t//обработка горячей клавиши\n  // \t\tif (request.key == 'selectProfile') {\n  // \t\t\t//нужные действия\n  // \t\t}\n  // \t\t//аналогично для остальных клавиш\n  // \t} else {\n  // \t\t//sendResponse({});\n  // \t}\n  // });\n});"},"sourceMaps":null,"error":null,"hash":"a611710dbaec53f90b1a63412e16d16b","cacheData":{"env":{}}}