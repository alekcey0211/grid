{"id":"yIId","dependencies":[{"name":"C:\\DATA\\WEB_2020\\chrome_extension\\grid\\package.json","includedInParent":true,"mtime":1608752339429}],"generated":{"js":"if (!EXT_HOTKEY_JS_INSERTED) {\n  //собственно, главный обработчик нажатий клавиш в окне документа\n  var event_handleKeyDownEvent = function event_handleKeyDownEvent(e) {\n    if (!hotkeys) return true;\n    var c = 0;\n    var a = 0;\n    var s = 0;\n    var k = e.keyCode;\n    if (e.shiftKey) s = 1;\n    if (e.altKey) a = 1;\n    if (e.ctrlKey) c = 1;\n\n    if (k == 27 && !c && !a && !s) {\n      if (document.getElementById('hotkeyresponder').style.display != 'none') {\n        // скрытие индикатора по Esc\n        document.getElementById('hotkeyresponder').style.display = 'none';\n        e.preventDefault();\n        e.cancelBubble = true;\n        e.bubbles = false;\n        return false;\n      }\n    }\n\n    for (var name in hotkeys) {\n      if (hotkeys.hasOwnProperty(name)) {\n        if (hotkeys[name].c == c && hotkeys[name].a == a && hotkeys[name].s == s) {\n          //модификаторы совпадают, получена горячая клавиша, обрабатываем\n          if (name == 'selectProfile' && k > 48 && k < 58 && (c || a || s)) {\n            //универсальная горячая клавиша <модификатор+цифра>\n            chrome.extension.sendRequest({\n              operation: 'hotkey',\n              key: name,\n              id: k - 48\n            }, function (response) {\n              responseHotkey(name, response.status, response.message);\n            });\n            e.preventDefault();\n            e.cancelBubble = true;\n            e.bubbles = false;\n            return false;\n          } else if (hotkeys[name].k == k) {\n            //во всех случаях работаем только с полным совпадением. Модификатор совпал в условии выше, здесь проверили совпадение клавиши\n            if (name == 'toggleBodyi') {\n              document.getElementById('togglebody').onclick();\n            } //аналогично другие клавиши, которые выполняются непосредственно в теле страницы (toggle каких-то настроек, элементов DOM, etc.)\n            else {\n                //горячие клавиши, которые выполняются только внутри расширения\n                chrome.extension.sendRequest({\n                  operation: 'hotkey',\n                  key: name\n                }, function (response) {\n                  responseHotkey('pp', response.status, response.message);\n                });\n              }\n\n            e.preventDefault();\n            e.cancelBubble = true;\n            e.bubbles = false;\n            return false;\n          } else {\n            continue;\n          }\n        }\n      }\n    }\n  };\n\n  var responseHotkey = function responseHotkey(type, status, message) {\n    //отображение реакции на горячую клавишу\n    if (status == 'OK' && message) {\n      document.getElementById('hotkeyresponder').innerHTML = message;\n      document.getElementById('hotkeyresponder').style.display = 'block';\n      if (timeout) clearTimeout(timeout);\n      timeout = setTimeout(function () {\n        document.getElementById('hotkeyresponder').style.display = 'none';\n      }, 2000);\n    }\n  };\n\n  var EXT_HOTKEY_JS_INSERTED = true;\n  var hotkeys = '';\n  var messages = '';\n  var timeout = '';\n  chrome.extension.sendRequest({\n    operation: 'hotkeys'\n  }, function (response) {\n    //запрос текущих настроек горячих клавиш у расширения\n    if (response) if (response.hotkeys) {\n      hotkeys = JSON.parse(response.hotkeys);\n      var d = document.createElement('DIV'); //элемент для индикации реакции на горячие клавиши\n\n      d.id = 'hotkeyresponder'; //+стили: положение, вид, высокий z-index\n\n      document.body.appendChild(d);\n    }\n  });\n  document.addEventListener('keydown', event_handleKeyDownEvent, true);\n}"},"sourceMaps":null,"error":null,"hash":"3dbcf27ef580a3a188c99c53a952049b","cacheData":{"env":{}}}